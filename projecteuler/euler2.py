### 2018-10-29 mollyocr
#### projecteuler.net problem 2: even Fibonacci numbers

## Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
  ## 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
## By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

n1 = 0
n2 = 1
nth = n1 + n2

fibonacci_list = [n1, n2]

while (nth < 4000000):
    nth = n1 + n2
    fibonacci_list.append(nth)
    n1 = n2
    n2 = nth

print (fibonacci_list)

# print (f"Sum of the terms in the Fibonacci sequence (under four million): {sum(fibonacci_list)}")

fibonacci_evens = []

for item in fibonacci_list:
    if item % 2 == 0:
        fibonacci_evens.append(item)

print (f"Sum of the even-valued terms in the Fibonacci sequence (under four million): {sum(fibonacci_evens)}")

#### But surely there's a more elegant mechanism to single out the even numbers and sum them up without sticking them in another list?

#### Sum of the even-valued terms in the Fibonacci sequence under four million: 4613732
#### Congratulations, the answer you gave to problem 2 is correct.
#### You are the 635816th person to have solved this problem.
